@import io.javalin.http.Context
@import jte.components.messages.MessageModel
@import org.jetbrains.exposed.sql.ResultRow
@import java.util.*
@import kotlin.collections.List

@param messages: List<MessageModel>
@param attention: List<ResultRow>

!{ val domId = UUID.randomUUID().toString() }

<div id="message-viewer-${domId}" class="shadow-lg rounded-md">
    <p class="text-2xl font-semibold text-center">Messages</p>
    <hr />

    <div id="message-viewer-${domId}-messages" class="mx-3 h-96 overflow-y-scroll">
        @template.components.messages.prependMessageList(messages, attention)
        @template.components.messages.appendMessageList(emptyList<MessageModel>(), messages.lastOrNull(), attention)
        <div id="message-viewer-${domId}-bottom" class="h-3"></div>
    </div>
    
    <script>
        setInterval(() => {
          let viewer = document.getElementById("message-viewer-${domId}")
          let bottom = document.getElementById("message-viewer-${domId}-bottom")
          let children = document.getElementById("message-viewer-${domId}-messages").children
          let lastMessageEl = children.item(children.length - 2)

          if (viewer.lastMessageChecked !== lastMessageEl) {
            viewer.lastMessageChecked = lastMessageEl
            bottom.scrollIntoView()
          }
        }, 150)
    </script>
</div>